# This is a config file for the Zabbix agent daemon (Unix)
# To get more information about Zabbix, visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

### Option: PidFile
#	Name of PID file.
#
# Mandatory: no
# Default:
# PidFile=/tmp/zabbix_agentd.pid

PidFile=/var/run/zabbix/zabbix_agentd.pid

### Option: LogFile
#	Name of log file.
#	If not set, syslog is used.
#
# Mandatory: no
# Default:
# LogFile=

LogFile=/var/log/zabbix/zabbix_agentd.log

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
# Default:
# LogFileSize=1

LogFileSize=0

### Option: DebugLevel
#	Specifies debug level
#	0 - basic information about starting and stopping of Zabbix processes
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#
# Mandatory: no
# Range: 0-4
# Default:
# DebugLevel=3

### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
# SourceIP=

### Option: EnableRemoteCommands
#	Whether remote commands from Zabbix server are allowed.
#	0 - not allowed
#	1 - allowed
#
# Mandatory: no
# Default:
# EnableRemoteCommands=0

### Option: LogRemoteCommands
#	Enable logging of executed shell commands as warnings.
#	0 - disabled
#	1 - enabled
#
# Mandatory: no
# Default:
# LogRemoteCommands=0

##### Passive checks related

### Option: Server
#	List of comma delimited IP addresses (or hostnames) of Zabbix servers.
#	Incoming connections will be accepted only from the hosts listed here.
#	If IPv6 support is enabled then '127.0.0.1', '::127.0.0.1', '::ffff:127.0.0.1' are treated equally.
#
# Mandatory: no
# Default:
# Server=

#Server=zabbix.inner.y7tech.cn
Server=zabbix.inner.y7tech.cn,zabbix.y7tech.cn,gw.y7ech.cn,192.168.11.254,192.168.12.254

### Option: ListenPort
#	Agent will listen on this port for connections from the server.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ListenPort=10050

### Option: ListenIP
#	List of comma delimited IP addresses that the agent should listen on.
#	First IP address is sent to Zabbix server if connecting to it to retrieve list of active checks.
#
# Mandatory: no
# Default:
# ListenIP=0.0.0.0

### Option: StartAgents
#	Number of pre-forked instances of zabbix_agentd that process passive checks.
#	If set to 0, disables passive checks and the agent will not listen on any TCP port.
#
# Mandatory: no
# Range: 0-100
# Default:
# StartAgents=3

##### Active checks related

### Option: ServerActive
#	List of comma delimited IP:port (or hostname:port) pairs of Zabbix servers for active checks.
#	If port is not specified, default port is used.
#	IPv6 addresses must be enclosed in square brackets if port for that host is specified.
#	If port is not specified, square brackets for IPv6 addresses are optional.
#	If this parameter is not specified, active checks are disabled.
#	Example: ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:30051,::1,[12fc::1]
#
# Mandatory: no
# Default:
# ServerActive=

ServerActive=gw.y7tech.cn

### Option: Hostname
#	Unique, case sensitive hostname.
#	Required for active checks and must match hostname as configured on the server.
#	Value is acquired from HostnameItem if undefined.
#
# Mandatory: no
# Default:
# Hostname=

Hostname={{ grains['id'] }}

### Option: HostnameItem
#	Item used for generating Hostname if it is undefined. Ignored if Hostname is defined.
#	Does not support UserParameters or aliases.
#
# Mandatory: no
# Default:
# HostnameItem=system.hostname

### Option: HostMetadata
#	Optional parameter that defines host metadata.
#	Host metadata is used at host auto-registration process.
#	An agent will issue an error and not start if the value is over limit of 255 characters.
#	If not defined, value will be acquired from HostMetadataItem.
#
# Mandatory: no
# Range: 0-255 characters
# Default:
# HostMetadata=

### Option: HostMetadataItem
#	Optional parameter that defines an item used for getting host metadata.
#	Host metadata is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 255 characters.
#	This option is only used when HostMetadata is not defined.
#
# Mandatory: no
# Default:
# HostMetadataItem=

### Option: RefreshActiveChecks
#	How often list of active checks is refreshed, in seconds.
#
# Mandatory: no
# Range: 60-3600
# Default:
# RefreshActiveChecks=120

### Option: BufferSend
#	Do not keep data longer than N seconds in buffer.
#
# Mandatory: no
# Range: 1-3600
# Default:
# BufferSend=5

### Option: BufferSize
#	Maximum number of values in a memory buffer. The agent will send
#	all collected data to Zabbix Server or Proxy if the buffer is full.
#
# Mandatory: no
# Range: 2-65535
# Default:
# BufferSize=100

### Option: MaxLinesPerSecond
#	Maximum number of new lines the agent will send per second to Zabbix Server
#	or Proxy processing 'log' and 'logrt' active checks.
#	The provided value will be overridden by the parameter 'maxlines',
#	provided in 'log' or 'logrt' item keys.
#
# Mandatory: no
# Range: 1-1000
# Default:
# MaxLinesPerSecond=100

############ ADVANCED PARAMETERS #################

### Option: Alias
#	Sets an alias for an item key. It can be used to substitute long and complex item key with a smaller and simpler one.
#	Multiple Alias parameters may be present. Multiple parameters with the same Alias key are not allowed.
#	Different Alias keys may reference the same item key.
#	For example, to retrieve the ID of user 'zabbix':
#	Alias=zabbix.userid:vfs.file.regexp[/etc/passwd,^zabbix:.:([0-9]+),,,,\1]
#	Now shorthand key zabbix.userid may be used to retrieve data.
#	Aliases can be used in HostMetadataItem but not in HostnameItem parameters.
#
# Mandatory: no
# Range:
# Default:

### Option: Timeout
#	Spend no more than Timeout seconds on processing
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3
Timeout=15

### Option: AllowRoot
#	Allow the agent to run as 'root'. If disabled and the agent is started by 'root', the agent
#	will try to switch to the user specified by the User configuration option instead.
#	Has no effect if started under a regular user.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Default:
# AllowRoot=0

### Option: User
#	Drop privileges to a specific, existing user on the system.
#	Only has effect if run as 'root' and AllowRoot is disabled.
#
# Mandatory: no
# Default:
# User=zabbix

### Option: Include
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
# Default:
# Include=

Include=/etc/zabbix/zabbix_agentd.d/

# Include=/usr/local/etc/zabbix_agentd.userparams.conf
# Include=/usr/local/etc/zabbix_agentd.conf.d/
# Include=/usr/local/etc/zabbix_agentd.conf.d/*.conf

####### USER-DEFINED MONITORED PARAMETERS #######

### Option: UnsafeUserParameters
#	Allow all characters to be passed in arguments to user-defined parameters.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Range: 0-1
# Default:
# UnsafeUserParameters=0

### Option: UserParameter
#	User-defined parameter to monitor. There can be several user-defined parameters.
#	Format: UserParameter=<key>,<shell command>
#	See 'zabbix_agentd' directory for examples.
#
# Mandatory: no
# Default:
# UserParameter=

UserParameter=custom.vfs.dev.read.ops[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$4}'  
UserParameter=custom.vfs.dev.read.ms[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$7}'  
UserParameter=custom.vfs.dev.write.ops[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$8}'  
UserParameter=custom.vfs.dev.write.ms[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$11}'  
UserParameter=custom.vfs.dev.io.active[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$12}'  
UserParameter=custom.vfs.dev.io.ms[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$13}'  
UserParameter=custom.vfs.dev.read.sectors[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$6}'  
UserParameter=custom.vfs.dev.write.sectors[*],cat /proc/diskstats | grep $1 | head -1 | awk '{print $$10}'
UserParameter=custom.vfs.dev.readonly.sectors[*],sudo /bin/touch $1/.zabbix_readonly.zb >> /dev/null 2>&1 && echo 0 || echo 1
UserParameter=custom.vfs.dev.dev,bash /etc/zabbix/mybin/discover_dev.sh
####### LOADABLE MODULES #######

##########nginx 监控###############
UserParameter=nginx.accepts,/etc/zabbix/mybin/nginx_status.sh accepts 
UserParameter=nginx.handled,/etc/zabbix/mybin/nginx_status.sh handled 
UserParameter=nginx.requests,/etc/zabbix/mybin/nginx_status.sh requests 
UserParameter=nginx.connections.active,/etc/zabbix/mybin/nginx_status.sh active 
UserParameter=nginx.connections.reading,/etc/zabbix/mybin/nginx_status.sh reading 
UserParameter=nginx.connections.writing,/etc/zabbix/mybin/nginx_status.sh writing 
UserParameter=nginx.connections.waiting,/etc/zabbix/mybin/nginx_status.sh waiting


UserParameter=custom.system.cpu,/etc/zabbix/mybin/discover_cpu.sh
UserParameter=custom.system.cpu.cpu[*],mpstat -P $1|awk '{print $$2}'|tail -1
UserParameter=custom.system.cpu.usr[*],mpstat -P $1|awk '{print $$3}'|tail -1
UserParameter=custom.system.cpu.nice[*],mpstat -P $1 | awk '{print $$4}' |tail -1
UserParameter=custom.system.cpu.sys[*],mpstat -P $1 | awk '{print $$5}' |tail -1
UserParameter=custom.system.cpu.iowait[*],mpstat -P $1 | awk '{print $$6}' |tail -1
UserParameter=custom.system.cpu.irq[*],mpstat -P $1 | awk '{print $$7}' |tail -1
UserParameter=custom.system.cpu.soft[*],mpstat -P $1 | awk '{print $$8}' |tail -1
UserParameter=custom.system.cpu.steal[*],mpstat -P $1 | awk '{print $$9}' |tail -1
UserParameter=custom.system.cpu.guest[*],mpstat -P $1 | awk '{print $$10}' |tail -1
UserParameter=custom.system.cpu.idle[*],mpstat -P $1 | awk '{print $$11}' |tail -1

#####################################################################################
UserParameter=custom.net.state.fin_wait2[*],/etc/zabbix/mybin/get_netstate.sh FIN_WAIT2
UserParameter=custom.net.state.closing[*],/etc/zabbix/mybin/get_netstate.sh CLOSING
UserParameter=custom.net.state.listen[*],/etc/zabbix/mybin/get_netstate.sh LISTEN
UserParameter=custom.net.state.syn_recv[*],/etc/zabbix/mybin/get_netstate.sh SYN_RECV
UserParameter=custom.net.state.close_wait[*],/etc/zabbix/mybin/get_netstate.sh CLOSE_WAIT
UserParameter=custom.net.state.established[*],/etc/zabbix/mybin/get_netstate.sh ESTABLISHED
UserParameter=custom.net.state.last_ack[*],/etc/zabbix/mybin/get_netstate.sh LAST_ACK
UserParameter=custom.net.state.syn_sent[*],/etc/zabbix/mybin/get_netstate.sh SYN_SENT
UserParameter=custom.net.state.fin_wait1[*],/etc/zabbix/mybin/get_netstate.sh FIN_WAIT1

UserParameter=varnish.stat[*],/etc/zabbix/mybin/varnish.sh $1

UserParameter=custom.cdn.inter.stat,/etc/zabbix/mybin/cdn_inter.sh 
UserParameter=custom.cdn.inter.split,/usr/bin/python /etc/zabbix/mybin/get-split-num.py

#################################pid###############################
UserParameter=custom.app.proc.name,bash /etc/zabbix/mybin/discover_process.sh 
UserParameter=custom.app.proc.pid[*],bash /etc/zabbix/mybin/checkpid.sh $1 PID
UserParameter=custom.app.proc.limit[*],bash /etc/zabbix/mybin/checkpid.sh $1 LIMITS
UserParameter=custom.app.proc.starttime[*],bash /etc/zabbix/mybin/checkpid.sh $1 START
UserParameter=custom.app.proc.stat[*],bash /etc/zabbix/mybin/checkpid.sh $1
###################################################################


####### LOADABLE MODULES #######

### Option: LoadModulePath
#	Full path to location of agent modules.
#	Default depends on compilation options.
#
# Mandatory: no
# Default:
# LoadModulePath=${libdir}/modules

### Option: LoadModule
#	Module to load at agent startup. Modules are used to extend functionality of the agent.
#	Format: LoadModule=<module.so>
#	The modules must be located in directory specified by LoadModulePath.
#	It is allowed to include multiple LoadModule parameters.
#
# Mandatory: no
# Default:
# LoadModule=
